% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/initialize.r
\name{dss_require}
\alias{dss_require}
\alias{dss_connect}
\title{Connect To DSS}
\usage{
dss_require(
  dss_home = getOption("dss.home"),
  message_level = getOption("dss.messagelevel"),
  monolith = TRUE,
  quietly = TRUE
)

dss_connect(
  dss_home = getOption("dss.home"),
  message_level = getOption("dss.messagelevel"),
  monolith = getOption("dss.monolith"),
  quietly = FALSE
)
}
\arguments{
\item{dss_home}{The path to the HEC-DSS install folder.}

\item{message_level}{An integer specifying the DSS message level.
Default is 2L. Use 1L to suppress all messages from DSS.}

\item{monolith}{If \code{TRUE}, connect to HEC-Monolith libraries.}

\item{quietly}{If \code{TRUE}, suppress warnings regarding the JVM.}
}
\description{
Connect to DSS via the JVM.
}
\details{
both \code{\link[=dss_connect]{dss_connect()}} and \code{\link[=dss_require]{dss_require()}} configure the JVM
to use the HEC-DSS Java library. \code{\link[=dss_require]{dss_require()}} is designed for
use inside other packages; it returns \code{FALSE} and gives a
warning (rather than an error as \code{\link[=dss_connect]{dss_connect()}} does)
if the HEC-DSS Java library cannot be loaded correctly.
}
\section{Java Virtual Machine Parameters}{

When working with very large DSS files, you may need to initialize
the Java Virtual Machine (JVM) with a larger heap size. For more
information see the help vignette:
\code{vignette("Java Virtual Machine Parameters", package = "dssrip2")}
}

\seealso{
\code{\link[=dss_message_level]{dss_message_level()}} \code{\link[=dss_install_monolith]{dss_install_monolith()}}
}
