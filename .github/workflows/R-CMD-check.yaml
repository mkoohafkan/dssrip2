# Workflow derived from https://github.com/r-lib/actions/tree/v2/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macos-13,   r: 'release'}
          - {os: windows-latest, r: 'release'}
          - {os: ubuntu-latest,   r: 'devel', http-user-agent: 'release'}
          - {os: ubuntu-latest,   r: 'release'}
          - {os: ubuntu-latest,   r: 'oldrel-1'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes
      FLOGGER_VERSION: 0.5.1
      MONOLITH_VERSION: 3.3.27
      NUCLEUS_VERSION: 2.0.1
      HECNF_VERSION: 7.2.0
      JAVAHECLIB_VERSION: 7-IU-8

    steps:
      - uses: actions/checkout@v3

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck
          needs: check
      
      - name: Set up monolith directory
        run: |
          mkdir -p './.dssrip2/jar' './.dssrip2/lib'
          echo "DSS_HOME_CI=${{ runner.temp }}/.dssrip2" >> $GITHUB_ENV
        working-directory: ${{ runner.temp }}

      - name: download jar dependencies
        run: |
          echo ::group::Download flogger
          curl -O https://repo1.maven.org/maven2/com/google/flogger/flogger/${{ env.FLOGGER_VERSION }}/flogger-${{ env.FLOGGER_VERSION }}.jar
          curl -O https://repo1.maven.org/maven2/com/google/flogger/flogger-system-backend/${{ env.FLOGGER_VERSION }}/flogger-system-backend-${{ env.FLOGGER_VERSION }}.jar
          echo ::endgroup::
          echo ::group::Download HEC Monolith
          curl -O https://www.hec.usace.army.mil/nexus/repository/maven-public/mil/army/usace/hec/hec-monolith/${{ env.MONOLITH_VERSION }}/hec-monolith-${{ env.MONOLITH_VERSION }}.jar
          curl -O https://www.hec.usace.army.mil/nexus/repository/maven-public/mil/army/usace/hec/hec-monolith-compat/${{ env.MONOLITH_VERSION }}/hec-monolith-compat-${{ env.MONOLITH_VERSION }}.jar
          echo ::endgroup::
          echo ::group::Download HEC Nucleus
          curl -O https://www.hec.usace.army.mil/nexus/repository/maven-public/mil/army/usace/hec/hec-nucleus-data/${{ env.NUCLEUS_VERSION }}/hec-nucleus-data-${{ env.NUCLEUS_VERSION }}.jar
          curl -O https://www.hec.usace.army.mil/nexus/repository/maven-public/mil/army/usace/hec/hec-nucleus-metadata/${{ env.NUCLEUS_VERSION }}/hec-nucleus-metadata-${{ env.NUCLEUS_VERSION }}.jar
          echo ::endgroup::
          echo ::group::Download hecnf
          curl -O https://www.hec.usace.army.mil/nexus/repository/maven-public/mil/army/usace/hec/hecnf/hecnf/${{ env.HECNF_VERSION }}/hecnf-${{ env.HECNF_VERSION }}.jar          
          echo ::endgroup::
        working-directory: ${{ DSS_HOME_CI }}/jar
        shell: bash

      - name: download lib dependencies
        run: |
          echo ::group::Download javaHeclib
          if [ "$RUNNER_OS" == "Linux" ]; then
          curl -o javaHeclib.zip https://www.hec.usace.army.mil/nexus/repository/maven-public/mil/army/usace/hec/javaHeclib/${{ env.JAVAHECLIB_VERSION }}-linux-x86_64/javaHeclib-${{ env.JAVAHECLIB_VERSION }}-linux-x86_64.zip
          elif [ "$RUNNER_OS" == "Windows" ]; then
          curl -o javaHeclib.zip https://www.hec.usace.army.mil/nexus/repository/maven-public/mil/army/usace/hec/javaHeclib/${{ env.JAVAHECLIB_VERSION }}-win-x86_64/javaHeclib-${{ env.JAVAHECLIB_VERSION }}-win-x86_64.zip
          elif [ "$RUNNER_OS" == "macOS" ]; then
          curl -o javaHeclib.zip https://www.hec.usace.army.mil/nexus/repository/maven-public/mil/army/usace/hec/javaHeclib/${{ env.JAVAHECLIB_VERSION }}-macOS-x86_64/javaHeclib-${{ env.JAVAHECLIB_VERSION }}-macOS-x86_64.zip
          else
            echo "$RUNNER_OS not supported"
            exit 1
          fi
          7z e javaHeclib.zip .
          rm javaHeclib.zip
          echo ::endgroup::
        working-directory: ${{ DSS_HOME_CI }}/lib
        shell: bash
  
      - uses: r-lib/actions/check-r-package@v2
        with:
          upload-snapshots: true
