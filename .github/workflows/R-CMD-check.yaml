# Workflow derived from https://github.com/r-lib/actions/tree/v2/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macos-latest,   r: 'release'}
          - {os: windows-latest, r: 'release'}
          - {os: ubuntu-latest,   r: 'devel', http-user-agent: 'release'}
          - {os: ubuntu-latest,   r: 'release'}
          - {os: ubuntu-latest,   r: 'oldrel-1'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes
      FLOGGER_VERSION: 0.7.4
      MONOLITH_VERSION: 3.3.16
      NUCLEUS_VERSION: 2.0.1
      HECNF_VERSION: 6.0.00.100
      JAVAHECLIB_VERSION: 7-IQ-11

    steps:
      - uses: actions/checkout@v3

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck
          needs: check
      
      - uses: stCarolas/setup-maven@v4.5

      - uses: s4u/maven-settings-action@v2.8.0

      - name: download dependencies
        run: |
          echo ::group::Download flogger
          mvn -Dmaven.repo.local='${{ runner.temp }}/temp_repo' dependency:get -Dartifact='com.google.flogger:flogger-system-backend:$FLOGGER_VERSION:jar'
          mvn -Dmaven.repo.local='${{ runner.temp }}/temp_repo' dependency:get -Dartifact='com.google.flogger:flogger:$FLOGGER_VERSION:jar'
          echo ::endgroup::
          echo ::group::Download HEC Monolith
          mvn -Dmaven.repo.local='${{ runner.temp }}/temp_repo' dependency:get -Dartifact='mil.army.usace.hec:hec-monolith-compat:$MONOLITH_VERSION:jar' -DremoteRepositories='https://www.hec.usace.army.mil/nexus/repository/maven-releases'
          mvn -Dmaven.repo.local='${{ runner.temp }}/temp_repo' dependency:get -Dartifact='mil.army.usace.hec:hec-monolith:$MONOLITH_VERSION:jar' -DremoteRepositories='https://www.hec.usace.army.mil/nexus/repository/maven-releases'
          echo ::endgroup::
          echo ::group::Download HEC Nucleus
          mvn -Dmaven.repo.local='${{ runner.temp }}/temp_repo' dependency:get -Dartifact='mil.army.usace.hec:hec-nucleus-data:$NUCLEUS_VERSION:jar' -DremoteRepositories='https://www.hec.usace.army.mil/nexus/repository/maven-releases'
          mvn -Dmaven.repo.local='${{ runner.temp }}/temp_repo' dependency:get -Dartifact='mil.army.usace.hec:hec-nucleus-metadata:$NUCLEUS_VERSION:jar' -DremoteRepositories='https://www.hec.usace.army.mil/nexus/repository/maven-releases'
          echo ::endgroup::
          echo ::group::Download hecnf
          mvn -Dmaven.repo.local='${{ runner.temp }}/temp_repo' dependency:get -Dartifact='mil.army.usace.hec:hecnf:$HECNF_VERSION:jar' -DremoteRepositories='https://www.hec.usace.army.mil/nexus/repository/maven-releases'
          echo ::endgroup::
          echo ::group::Download javaHeclib
          if [ "$RUNNER_OS" == "Linux" ]; then
            mvn -Dmaven.repo.local='${{ runner.temp }}/temp_repo' dependency:get -Dartifact='mil.army.usace.hec:javaHeclib:$JAVAHECLIB_VERSION-linux-x86_64:zip' -DremoteRepositories='https://www.hec.usace.army.mil/nexus/repository/maven-releases'
          elif [ "$RUNNER_OS" == "Windows" ]; then
            mvn -Dmaven.repo.local='${{ runner.temp }}/temp_repo' dependency:get -Dartifact='mil.army.usace.hec:javaHeclib:$JAVAHECLIB_VERSION-win-x86_64:zip' -DremoteRepositories='https://www.hec.usace.army.mil/nexus/repository/maven-releases'
          elif [ "$RUNNER_OS" == "macOS" ]; then
            mvn -Dmaven.repo.local='${{ runner.temp }}/temp_repo' dependency:get -Dartifact='mil.army.usace.hec:javaHeclib:$JAVAHECLIB_VERSION-macOS-x86_64:zip' -DremoteRepositories='https://www.hec.usace.army.mil/nexus/repository/maven-releases'
          else
            echo "$RUNNER_OS not supported"
            exit 1
          fi
          echo ::endgroup::
          echo ::group::Copy dependencies to directory
          mkdir -p '${{ runner.temp }}/.dssrip2/jar' '${{ runner.temp }}/.dssrip2/lib'
          cp \
            '${{ runner.temp }}/temp_repo/mil/army/usace/hec/hec-nucleus-data/$NUCLEUS_VERSION/hec-nucleus-data-$NUCLEUS_VERSION.jar' \
            '${{ runner.temp }}/temp_repo/mil/army/usace/hec/hec-nucleus-metadata/$NUCLEUS_VERSION/hec-nucleus-metadata-$NUCLEUS_VERSION.jar' \
            '${{ runner.temp }}/temp_repo/mil/army/usace/hec/hec-monolith-compat/$MONOLITH_VERSION/hec-monolith-compat-$MONOLITH_VERSION.jar' \
            '${{ runner.temp }}/temp_repo/mil/army/usace/hec/hec-monolith/$MONOLITH_VERSION/hec-monolith-$MONOLITH_VERSION.jar' \
            '${{ runner.temp }}/temp_repo/com/google/flogger/flogger-system-backend/$FLOGGER_VERSION/flogger-system-backend-$FLOGGER_VERSION.jar' \
            '${{ runner.temp }}/temp_repo/com/google/flogger/flogger/$FLOGGER_VERSION/flogger-$FLOGGER_VERSION.jar' \
            '${{ runner.temp }}/temp_repo/mil/army/usace/hec/hecnf/$HECNF_VERSION/hecnf-$HECNF_VERSION.jar' \
            '${{ runner.temp }}/.dssrip2/jar'
          if [ "$RUNNER_OS" == "Linux" ]; then
            7z e '${{ runner.temp }}/temp_repo/mil/army/usace/hec/javaHeclib/$JAVAHECLIB_VERSION-linux-x86_64/javaHeclib-$JAVAHECLIB_VERSION-linux-x86_64.zip' \
              -o'${{ runner.temp }}/.dssrip2/lib'
          elif [ "$RUNNER_OS" == "Windows" ]; then
            7z e '${{ runner.temp }}/temp_repo/mil/army/usace/hec/javaHeclib/$JAVAHECLIB_VERSION-win-x86_64/javaHeclib-$JAVAHECLIB_VERSION-win-x86_64.zip' \
              -o'${{ runner.temp }}/.dssrip2/lib'
          elif [ "$RUNNER_OS" == "macOS" ]; then
            7z e '${{ runner.temp }}/temp_repo/mil/army/usace/hec/javaHeclib/$JAVAHECLIB_VERSION-macOS-x86_64/javaHeclib-$JAVAHECLIB_VERSION-macOS-x86_64.zip' \
              -o'${{ runner.temp }}/.dssrip2/lib'
          else
            echo "$RUNNER_OS not supported"
            exit 1
          fi
          echo "DSS_HOME_CI=${{ runner.temp }}/.dssrip2" >> $GITHUB_ENV
          echo ::endgroup::
        shell: bash
  
      - uses: r-lib/actions/check-r-package@v2
        with:
          upload-snapshots: true
